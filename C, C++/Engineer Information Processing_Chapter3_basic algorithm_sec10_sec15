// 3장 기본 알고리즘 - 수열


#include <stdio.h>
#include <math.h>


// int main(void) {
//   printf("Hello World\n");
//   int j = 0;
//   for(int i=1 ; i<100; i++){
//     j += pow(-1, i+1) * i;
    
//     printf("i: %d / sum: %d\n", i, j);
//   }
//   return 0;
// }

// int main() {
//   int i, j, SW;
//   i = 0;
//   j = 0;
//   SW = 0;

//   for(;i<100;){
//     i = i+1;
//     if(SW == 0){
//       j = j+i;
//       SW = 1;
//     }
//     else if(SW == 1){
//       j = j-i;
//       SW = 0;
//     }
//     printf("SW:%d, / i:%d / j:%d \n", SW, i, j);
//   }
//   return 0;
// }

// int main(void){
//   int i, j;
//   i = 0;
//   j = 0;
//   do{
//     i = i+1;
//     j = j+i;
//       printf("unified proc unit// i:%d / j:%d \n", i, j);

//     if(i >=99){
//       // printf("unified proc unit// i:%d / j:%d \n", i, j);      
//       printf("done");
//       break;
//     }
//     i = i+1;
//     j = j-i;
//     printf("unified proc unit// i:%d / j:%d \n", i, j);
//   } while( i < 99);
//   return 0;
// }

// int main(void){
//   int i = 0;
//   double j = 1;
//   do{
//     i = i+1;
//     j = j*(-i);
//     printf("unified proc unit Multiply// i:%d / j:%20.8e \n", i, j);

//     i = i+1;
//     j = j*i;
//     printf("unified proc unit Multiply// i:%d / j:%20.8e \n", i, j);
//   } while( i < 100);
//   return 0;
// }

// int main(void){
//   float i = 0;
//   float j = 0;
//   do{
//     i = i+1;
//     j = j - i/(i+1);
//     printf("frac addition// val: %3.f/%3.f / i:%f / j:%f \n", i, i+1, i, j);

//     // if(i>=99){
//     //   printf("done");
//     //   break;
//     // }
//     i = i+1;
//     j = j + i/(i+1);
//     printf("frac addition// val: %3.f/%3.f / i:%f / j:%f \n", i, i+1, i, j);
//   } while( i < 99);
//   return 0;
// }

#define type(x) _Generic((x),\
        _Bool: "_Bool",                  unsigned char: "unsigned char",          \
         char: "char",                     signed char: "signed char",            \
    short int: "short int",         unsigned short int: "unsigned short int",     \
          int: "int",                     unsigned int: "unsigned int",           \
     long int: "long int",           unsigned long int: "unsigned long int",      \
long long int: "long long int", unsigned long long int: "unsigned long long int", \
        float: "float",                         double: "double",                 \
  long double: "long double",                   char *: "char *",                 \
       void *: "void *",                         int *: "int *",                  \
      default: "unknown")


// int main() {
//     char ch;
//     int a;
//     long b;
//     char* str;
//     char str2[5];

//     printf( "%s\n", type(ch) ); // char
//     printf( "%s\n", type(a) ); // int
//     printf( "%s\n", type(b) ); // long int
//     printf( "%s\n", type(str) ); // char *
//     printf( "%s\n", type(str2) ); // char *

//     return 0;
// }




// sec 012 수열3 / using cast operator practice 01
// int main(){
//   float i = 0, j = 0;
//   float* pi = &i;
//   do{
//     i++;
//     printf("%d\n", (int)i/2);
//     // if((int)i/2 == i/2){
//     printf("%s\n", type(i));
//     printf("%s\n", type((int)i/2));
//     printf("\n");
//     printf("*pi : %s\n", type(*pi));
//     printf("(int)*pi/2) : %s\n", type((int)*pi/2));
//     printf("\n");
//     printf("pi : %s\n", type(pi));
//     printf("(int)pi/2) : %s\n", type((int)pi/2));
//     printf("val of pi : %p", pi);
//     // }

//   } while(i<1);

//   return 0;
// }

// sec 012 수열3 / using cast operator real game

// int main(void){
//   float i = 0, j = 0;
//   do{
//     i++;
//     if((int)(i/2) == i/2){
//       j = j + i/(i+1);
//     }
//     else{
//       j = j - i/(i+1);
//     }
//     printf("i:%3.f / j:%3.6f\n", i, j);
//   } while(i<99);

//   return 0;
// }

// sec 013 수열4(계차수열) 1+2+4+11+16+22+... 20번째 항까지의 합계

// int main(){
//   int i=0, j=0, sum=0;
//   do{
//     i++;
//     j = j+i;
//     sum = sum + j;
//     printf("i:%d / j:%d / sum:%d \n", i, j, sum);
//   } while(i<20);

//   return 0;
// }
// result : 1540 인데 틀렸다. 어디가 잘못되었는가?

// int main(){
//   int i=0, j=1, sum=1;
//   printf("i:%d / j:%d / sum:%d \n", i, j, sum);
//   do{
//     i++;
//     j = j+i;
//     sum = sum + j;
//     printf("i:%d / j:%d / sum:%d \n", i, j, sum);
//   } while(i<19);

//   return 0;
// }
// result : 1350 정답!

// sec 013 수열4(계차수열) 문제 : 1+3+6+10+15+21+28+... 20번째 항까지의 합계

// int main(void){
//   int i = 0, j = 0, sum = 0;
//   do{
//     i++;
//     j += i;
//     sum += j;
//     printf("i:%d / j:%d / sum:%d \n", i, j, sum);
//   } while(i<20);
//   return 0;
// }
// result : 1540 정답!

// sec 013 수열4(계차수열) 유형2 계차수열 부호 번갈아 나오는 경우 -1+2-4+7-11+16-22+... 20번째 항까지의 합계

// int main(){
//   int i=, j=, sum=; // 알맞은 숫자는??
//   printf("i:%d / j:%d / sum:%d \n", i, j, sum);
//   do{
//     i++;
//     j = j+i;
//     if(i%2 == 0){
//       sum -= j;   
//       // printf("(int)i/2: %d / i/2: %d \n", (int)i/2, i/2);
//     }
//     else{
//       sum += j;
//     }
    
//     printf("i:%d / j:%d / sum:%d \n", i, j, sum);
//   } while(i<19);

//   return 0;
// }

// result : 100 정답

// sec 013 수열4(계차수열) 유형2 계차수열 부호 번갈아 나오는 경우 -1+2-4+7-11+16-22+... 20번째 항까지의 합계
// using switch variable

// int main(void){
//   int i = 0, j = 1, sw = -1, sum = -1;
//   do{
//     i++;
//     sw *= -1;
//     j += i;
//     sum += sw*j;
//     printf("i:%2.d/ j:%3.d/ sw:%2.d/ sum:%3.d\n", i, j, sw, sum);
//   } while(i<19);
//   return 0;
// }

// result : 100 정답

// sec 014 수열5(팩토리얼의 합계) 10번째 항까지의 합계

// int fac(int n){
//   if(n<=1){
//     return 1;
//   }
//   else{
//     return n*fac(n-1);
//   }
// }

// int main(){
//   int i = 0, sum = 0;
//   do{
//     i++;
//     sum += fac(i);
//     printf("i:%2.d/ sum:%7.d\n", i, sum);
//   } while(i<10);
//   return 0;
// }

// result 4037913 정답!

// sec 014 수열5(팩토리얼의 합계) 10번째 항까지의 합계
// without factorial

// int main(void){
//   int i = 0, j = 1, sum = 0;
//   do{
//     i++;
//     j *= i;
//     sum += j;
//     printf("i:%2.d/ sum:%7.d\n", i, sum);
//   } while(i<10);
//   return 0;
// }

// result 4037913 정답!

// sec 014 수열5(팩토리얼의 합계) 10번째 항까지의 합계
// without factorial
// 초기화 값변화 i=1 j=1 sum=1

// int main(void){
//   int i = 1, j = 1, sum = 1;
//   do{
//     i++;
//     j *= i;
//     sum += j;
//     printf("i:%2.d/ sum:%7.d\n", i, sum);
//   } while(i<10);
//   return 0;
// }

// result 4037913 정답!


// sec 015 수열6(피보나치수열) 1+1+2+3+5+... 20번째 항까지의 합계

// int main(){
//   int l=1, i=0, j=0, k=1, sum=1;
//   printf("l:%2.d / i:%3.d / j:%4.d / k:%4.d / sum:%7.d \n", l, i, j, k, sum);
//   do{
//     l++;
//     i = j;
//     j = k;
//     k = i + j;
//     sum +=k;
//     printf("l:%2.d / i:%3.d / j:%4.d / k:%4.d / sum:%7.d \n", l, i, j, k, sum);
//   } while(l<20);
//   return 0;
// }

// result 17710 정답!

// sec 015 수열6(피보나치수열) 1+1+2+3+5+... 20번째 항까지의 합계
// 교재 순서도대로 코드 짜기

int main(){
  int HAP, CNT, C, A=1, B=1;
  // CNT = 0;
  // HAP = 0;
  // C = 0;
  CNT = 2;
  HAP = 2;
  do{
    C = A+B;
    HAP += C;
    
    CNT ++;
    A = B;
    B = C;
    printf("CNT:%2.d / A:%d / B:%d / C:%7.d / HAP:%7.d\n", CNT, A, B, C, HAP);
  } while(CNT < 20);
  return 0;
}
